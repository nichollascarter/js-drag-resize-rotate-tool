{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/util.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/core/transform/index.js","webpack://Subjx/./src/js/core/clone/clone.js","webpack://Subjx/./src/js/index.js","webpack://Subjx/./src/js/core/clone/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","arrReduce","reduce","warn","console","isDef","val","isUndef","isFunc","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","index","indexOf","splice","source","data","observer","notifyMove","notifyRotate","notifyResize","notifyApply","notifyGetState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","helper_createClass","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseMatrix","transform","match","item","parseFloat","addClass","cls","classList","add","split","cl","unitRE","RAD","Math","PI","snapToGrid","snap","result","gridSize","round","snapCandidate","rotatedTopLeft","x","y","width","height","rotationAngle","revX","revY","hw","hh","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","left","floatToFixed","top","toPX","parent","test","fromPX","toUnit","getUnitDimension","Number","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","proxyMethods","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_animate","_load","_init","onExecution","_end","off","remove","removeClass","_destroy","unsubscribe","onDestroy","_this$proxyMethods$on","_processMove","onMove","_this$proxyMethods$on2","_processRotate","onRotate","_this$proxyMethods$on3","_processResize","onResize","_snap","angle","_each","move","resize","rotate","_showHandles","_restrict","_onInit","_onMove","_onRotate","_onResize","_onDrop","_onDestroy","_container","_proportions","each","showHandles","restrict","onInit","onDrop","container","proportions","createEvent","subscribe","ctx","frame","doDraw","handle","handles","nx","ny","pressang","clientX","clientY","center","doDrag","doResize","doRotate","_storage$each","moveEach","resizeEach","rotateEach","_this$_pointToElement","_pointToElement","is","ml","mr","tl","tr","bl","br","bc","tc","_resize","notify","_drag","radians","_rotate","e","stopImmediatePropagation","computed","_compute","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","ctrlKey","_this$_cursorPoint","_cursorPoint","_this$_pointToElement2","_draw","preventDefault","_this$_cursorPoint2","action","_apply","_start","on","touches","_moving","changedTouches","dox","doy","actionName","store","recalc","_getState","Draggable","_this","html_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","enable","createElement","insertBefore","_sel$style","w","h","_parent","controls","innerHTML","appendChild","_controls","assign","find","_this$storage","removeChild","_computed","ctm","_toConsumableArray","matrix","multiplyMatrixAndPoint","matrixInvert","globalMatrix","_el","cached","dimens","pW","pH","diffLeft","diffTop","matrixToCSS","coords","cw","ch","refang","newWidth","newHeight","newCoords","n_matrix","parentMatrix","rotMatrix","pctm","resMatrix","multiplyMatrix","tl_off","tr_off","styleList","offset_","_multiplyMatrixAndPoi","join","webkitTranform","mozTransform","msTransform","otransform","point","_matrix","_slicedToArray","a","b","M","dim","I","C","j","ii","mtrx1","mtrx2","m1","m2","k","sum","ALLOWED_ELEMENTS","createSVGElement","createElementNS","createSVGMatrix","getTransformToElement","toElement","g","getScreenCTM","inverse","multiply","matrixToString","pointTo","svg","pt","createSVGPoint","matrixTransform","cloneMatrix","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","replace","relative","values","trim","isNaN","floatRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","wrapper","_sel$getBBox","getBBox","elCTM","box","setAttribute","handlesGroup","normalLineGroup","group","_box$getBBox","bX","bY","bW","bH","boxCTM","theta","normalLine","x1","baseVal","y1","x2","y2","items","fill","stroke","vector-effect","createHandler","_this$storage2","element","scaleX","scaleY","ox","oy","eM","translateMatrix","isGroup","checkChildElements","child","newPT","applyTranslate","_box$getBBox2","applyTransformToHandles","applyResize","defaultCTM","__ctm__","bBox","_this$storage3","scMatrix","trMatrix","ptX","ptY","_box$getBBox3","abs","scaleMatrix","res","_this$storage4","wrapperMatrix","moveWrapper","_pointTo","moveElement","_this$storage5","wrapMatrix","el_x","el_y","resRotMatrix","elMatrix","eBBox","el_w","el_h","_box$getBBox4","c_left","c_top","boxGroup","boxMatrix","hW","hH","boxCenter","elementCenter","attrs","tagName","toLowerCase","resX","getAttribute","resY","resX1","resY1","resX2","resY2","parsePoints","str","space","firstCommand","coordinates","_values$slice2","path_slicedToArray","set","path_toConsumableArray","_values$slice4","_values$slice6","err","movePath","boxW","boxH","localCTM","_pointTo2","newR","_pointTo3","_pointTo4","_pointTo5","newW","newH","rx","_pointTo6","cx1","cy1","_pointTo7","nRx","nRy","_pointTo8","resX1_","resY1_","_pointTo9","resX2_","resY2_","_pointTo10","_values$slice8","x_axis_rot","large_arc_flag","sweep_flag","mtrx","newRx","newRy","unshift","_values$slice10","_values$slice16","_values$slice18","_values$slice20","_pointTo11","_values$slice22","_pointTo12","_pointTo13","resizePath","attr","boxAttrs","hdl","arrOfElements","childNodes","svg_toConsumableArray","pts","array","SVGElement","checkElement","Clone","clone_classCallCheck","_ctx$options","appendTo","stack","position","z-index","clone_typeof","dropZone","clone","_getOffset","aTop","aLeft","_getOffset2","bTop","bLeft","_a","_b","objectsCollide","body","offset","cloneNode","doMove","frameId","translate","_move","js_classCallCheck","js_possibleConstructorReturn","js_getPrototypeOf","__webpack_exports__"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\n    mozRequestAnimationFrame ||\n    webkitRequestAnimationFrame ||\n    msRequestAnimationFrame ||\n    function (f) {\n        return setTimeout(f, 1000 / 60);\n    };\n\nexport const cancelAnimFrame = cancelAnimationFrame ||\n    mozCancelAnimationFrame ||\n    function (requestID) {\n        clearTimeout(requestID);\n    };\n\nexport const forEach = Array.prototype.forEach,\n    arrSlice = Array.prototype.slice,\n    arrMap = Array.prototype.map,\n    arrReduce = Array.prototype.reduce,\n    warn = console.warn;\n\nexport function isDef(val) {\n    return val !== undefined && val !== null;\n}\n\nexport function isUndef(val) {\n    return val === undefined || val === null;\n}\n\nexport function isFunc(val) {\n    return typeof val === 'function';\n}","import { isDef, isUndef } from \"../util/util\";\n\nexport default class Observable {\n\n    constructor() {\n        this.observers = {};\n    }\n\n    subscribe(eventName, sub) {\n\n        const obs = this.observers;\n\n        if (isUndef(obs[eventName])) {\n            Object.defineProperty(obs, eventName, {\n                value: []\n            });\n        }\n\n        obs[eventName].push(sub);\n    }\n\n    unsubscribe(eventName, f) {\n\n        const obs = this.observers;\n\n        if (isDef(obs[eventName])) {\n            const index = obs[eventName].indexOf(f);\n            obs[eventName].splice(index, 1);\n        }\n    }\n\n    notify(eventName, source, data) {\n\n        if (isUndef(this.observers[eventName])) return;\n\n        this.observers[eventName].forEach(observer => {\n            if (source === observer) return;\n            switch (eventName) {\n                case 'onmove':\n                    observer.notifyMove(data);\n                    break;\n                case 'onrotate':\n                    observer.notifyRotate(data);\n                    break;\n                case 'onresize':\n                    observer.notifyResize(data);\n                    break;\n                case 'onapply':\n                    observer.notifyApply(data);\n                    break;\n                case 'ongetstate':\n                    observer.notifyGetState(data);\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n}","import {\n    arrSlice,\n    warn\n} from './util/util'\n\nexport class Helper_ {\n\n    constructor(params) {\n\n        if (!params) return this;\n\n        if (typeof params === 'string') {\n            let selector = document.querySelectorAll(params);\n            this.length = selector.length;\n            for (let count = 0; count < this.length; count++) {\n                this[count] = selector[count];\n            }\n        } else if (params.nodeType === 1 || params === document) {\n            this[0] = params;\n            this.length = 1;\n        } else if (params instanceof Subjx || typeof params === 'object') {\n            this.length = params.length;\n            for (let count = 0; count < this.length; count++) {\n                this[count] = params[count];\n            }\n        } else if (Array.isArray(params)) {\n            this.length = 0;\n            for (let count = 0; count < this.length; count++) {\n                if (params.nodeType === 1) {\n                    this[count] = params[count];\n                    this.length++;\n                }\n            }\n        }\n        return this;\n    }\n\n    css(property) {\n        return _css.call(this, property);\n    }\n    find(node) {\n        return _find.call(this, node);\n    }\n    each(fn) {\n        return _each.call(this, fn);\n    }\n    on() {\n        return _on.apply(this, arguments);\n    }\n    off() {\n        return _off.apply(this, arguments);\n    }\n    is(selector) {\n        return _is.call(this, selector);\n    }\n}\n\nfunction _css(prop) {\n\n    const methods = {\n        setStyle(options) {\n            return _setStyle(this, options);\n        },\n\n        getStyle() {\n            return _getStyle(this);\n        }\n    };\n\n    if (typeof prop === 'string') {\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\n    } else if (typeof prop === 'object' || !prop) {\n        return methods.setStyle.apply(this, arguments);\n    } else {\n        warn(`Method ${prop} does not exist`);\n    }\n    return false;\n\n\n    function _getStyle(obj) {\n\n        let len = obj.length;\n\n        while (len--) {\n            if (obj[len].currentStyle) {\n                return obj[len].currentStyle[prop];\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\n            } else {\n                return obj[len].style[prop];\n            }\n        }\n    }\n\n    function _setStyle(obj, options) {\n\n        let len = obj.length;\n\n        while (len--) {\n            for (let property in options) {\n                obj[len].style[property] = options[property];\n            }\n        }\n        return obj.style;\n    }\n}\n\nfunction _each(fn) {\n\n    const arr = arrSlice.call(this, 0);\n\n    for (let index = arr.length - 1; index >= 0; --index) {\n        let func = function () {\n            return arr[index];\n        };\n        fn.call(func());\n    }\n    return this;\n}\n\nfunction _find(sel) {\n\n    let len = this.length,\n        selector;\n\n    while (len--) {\n        selector = this[len].querySelectorAll(sel);\n        return Helper(selector);\n    }\n}\n\nfunction _on() {\n\n    let len = this.length;\n\n    while (len--) {\n\n        if (!this[len].events) {\n            this[len].events = {};\n            this[len].events[arguments[0]] = [];\n        }\n\n        if (arguments.length === 2) {\n\n            if (document.addEventListener) {\n                this[len].addEventListener(arguments[0], arguments[1], false);\n            } else if (document.attachEvent) {\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\n            } else {\n                this[len][`on${arguments[0]}`] = arguments[1];\n            }\n\n        } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\n        }\n    }\n    return this;\n}\n\nfunction _off() {\n\n    let len = this.length;\n\n    while (len--) {\n\n        if (!this[len].events) {\n            this[len].events = {};\n            this[len].events[arguments[0]] = [];\n        }\n\n        if (arguments.length === 2) {\n            if (document.removeEventListener) {\n                this[len].removeEventListener(arguments[0], arguments[1], false);\n            } else if (document.detachEvent) {\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\n            } else {\n                this[len][`on${arguments[0]}`] = null;\n            }\n\n        } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\n        }\n    }\n\n    return this;\n}\n\nfunction _is(selector) {\n\n    const _sel = Helper(selector);\n    let len = this.length;\n\n    while (len--) {\n        if (this[len] === _sel[len]) return true;\n    }\n    return false;\n}\n\nfunction listenerDelegate(el, evt, sel, handler, act) {\n\n    const doit = function (event) {\n        let t = event.target;\n        while (t && t !== this) {\n            if (t.matches(sel)) {\n                handler.call(t, event);\n            }\n            t = t.parentNode;\n        }\n    };\n\n    if (act === true) {\n        if (document.addEventListener) {\n            el.addEventListener(evt, doit, false);\n        } else if (document.attachEvent) {\n            el.attachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = doit;\n        }\n    } else {\n        if (document.removeEventListener) {\n            el.removeEventListener(evt, doit, false);\n        } else if (document.detachEvent) {\n            el.detachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = null;\n        }\n    }\n}\n\nexport function Helper(params) {\n    return new Helper_(params);\n}","import { Helper } from '../helper'\n\nexport function getOffset(node) {\n    return node.getBoundingClientRect();\n}\n\nexport function getTransform(el) {\n    const transform = el.css('-webkit-transform') ||\n        el.css('-moz-transform') ||\n        el.css('-ms-transform') ||\n        el.css('-o-transform') ||\n        el.css('transform') ||\n        'none';\n    return transform;\n}\n\nexport function parseMatrix(value) {\n\n    const transform = value.match(/-?\\d+\\.?\\d+|-?\\d+/g);\n\n    if (transform) {\n        return transform.map(item => {\n            return parseFloat(item);\n        });\n    } else {\n        return [1, 0, 0, 1, 0, 0];\n    }\n}\n\nexport function addClass(node, cls) {\n    if (!cls) return;\n\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function (cl) {\n                return node.classList.add(cl);\n            });\n        } else {\n            return node.classList.add(cls);\n        }\n    }\n    return node;\n}\n\nexport function removeClass(node, cls) {\n    if (!cls) return;\n\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function (cl) {\n                return node.classList.remove(cl);\n            });\n        } else {\n            return node.classList.remove(cls);\n        }\n    }\n    return node;\n}\n\nexport function objectsCollide(a, b) {\n\n    const {\n        top: aTop,\n        left: aLeft\n    } = getOffset(a),\n        {\n            top: bTop,\n            left: bLeft\n        } = getOffset(b),\n        _a = Helper(a),\n        _b = Helper(b);\n\n    return !(\n        ((aTop < bTop) ||\n            (aTop + parseFloat(_a.css('height'))) > (bTop + parseFloat(_b.css('height')))) ||\n        ((aLeft < bLeft) ||\n            (aLeft + parseFloat(_a.css('width'))) > (bLeft + parseFloat(_b.css('width'))))\n    )\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\nexport const RAD = Math.PI / 180;\nexport const DEG = 180 / Math.PI;\n\nexport function snapToGrid(value, snap) {\n\n    if (snap === 0) {\n        return value;\n    } else {\n        const result = snapCandidate(value, snap);\n\n        if (result - value < snap) {\n            return result;\n        }\n    }\n}\n\nexport function snapCandidate(value, gridSize) {\n    if (gridSize === 0) return value;\n    return Math.round(value / gridSize) * gridSize;\n}\n\nexport function rotatedTopLeft(\n    x,\n    y,\n    width,\n    height,\n    rotationAngle,\n    revX,\n    revY\n) {\n\n    const hw = parseFloat(width) / 2,\n        hh = parseFloat(height) / 2;\n\n    const cx = x + hw,\n        cy = y + hh;\n\n    const dx = x - cx,\n        dy = y - cy;\n\n    const originalTopLeftAngle = Math.atan2(dy, dx);\n\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\n\n    const radius = Math.sqrt(Math.pow(hw, 2) + Math.pow(hh, 2));\n\n    let cos = Math.cos(rotatedTopLeftAngle),\n        sin = Math.sin(rotatedTopLeftAngle);\n\n    cos = revX === true ? -cos : cos;\n    sin = revY === true ? -sin : sin;\n\n    const rx = cx + radius * cos,\n        ry = cy + radius * sin;\n\n    return {\n        left: floatToFixed(rx),\n        top: floatToFixed(ry)\n    }\n}\n\nexport function toPX(value, parent) {\n    if (/px/.test(value)) {\n        return value;\n    }\n    if (/%/.test(value)) {\n        return `${(parseFloat(value) * parseFloat(parent) / 100)}px`;\n    }\n}\n\nexport function fromPX(value, parent, toUnit) {\n    if (/px/.test(toUnit)) {\n        return value;\n    }\n    if (/%/.test(toUnit)) {\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\n    }\n}\n\nexport function getUnitDimension(value) {\n    return value.match(unitRE)[0];\n}\n\nexport function floatToFixed(val) {\n    return Number(val.toFixed(6));\n}","import { Helper } from '../helper'\n\nimport {\n    requestAnimFrame,\n    cancelAnimFrame,\n    isDef,\n    isUndef,\n    isFunc,\n    warn\n} from '../util/util'\n\nimport {\n    addClass,\n    removeClass\n} from '../util/css-util'\n\nimport {\n    snapToGrid,\n    RAD\n} from './common'\n\nexport default class Subject {\n\n    constructor(el, Observable) {\n\n        if (this.constructor === Subject) {\n            throw new TypeError('Cannot construct Subject instances directly');\n        }\n\n        this.el = el;\n        this.storage = null;\n        this.proxyMethods = null;\n        this.Ob = Observable;\n\n        this._onMouseDown = this._onMouseDown.bind(this);\n        this._onTouchStart = this._onTouchStart.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n        this._onTouchMove = this._onTouchMove.bind(this);\n        this._onMouseUp = this._onMouseUp.bind(this);\n        this._onTouchEnd = this._onTouchEnd.bind(this);\n        this._animate = this._animate.bind(this);\n    }\n\n    enable(options) {\n\n        if (isUndef(this.storage)) {\n            this._load(options);\n            this._init(this.el);\n        } else {\n            warn('Already enabled');\n        }\n    }\n\n    disable() {\n\n        const {\n            storage,\n            proxyMethods,\n            el,\n            Ob\n        } = this;\n\n        if (isUndef(storage)) return;\n\n        // unexpected case\n        if (storage.onExecution) {\n            this._end();\n            Helper(document)\n                .off('mousemove', this._onMouseMove)\n                .off('mouseup', this._onMouseUp)\n                .off('touchmove', this._onTouchMove)\n                .off('touchend', this._onTouchEnd);\n        }\n\n        removeClass(el, 'dg-drag');\n        this._destroy();\n\n        Ob.unsubscribe('ongetstate', this);\n        Ob.unsubscribe('onapply', this);\n        Ob.unsubscribe('onmove', this);\n        Ob.unsubscribe('onresize', this);\n        Ob.unsubscribe('onrotate', this);\n\n        proxyMethods.onDestroy.call(this, el);\n        delete this.storage;\n    }\n\n    _init() { }\n\n    _destroy() { }\n\n    _cursorPoint() { }\n\n    _drag() {\n        this._processMove(...arguments);\n        this.proxyMethods.onMove.call(this, ...arguments);\n    }\n\n    _rotate() {\n        this._processRotate(...arguments);\n        this.proxyMethods.onRotate.call(this, ...arguments);\n    }\n\n    _resize() {\n        this._processResize(...arguments);\n        this.proxyMethods.onResize.call(this, ...arguments);\n    }\n\n    _load(options) {\n\n        const { el, Ob } = this;\n\n        addClass(el, 'dg-drag');\n\n        const _snap = {\n            x: 10,\n            y: 10,\n            angle: 10 * RAD\n        };\n\n        const _each = {\n            move: false,\n            resize: false,\n            rotate: false\n        };\n\n        let _showHandles = true,\n            _restrict = null,\n            _onInit = () => { },\n            _onMove = () => { },\n            _onRotate = () => { },\n            _onResize = () => { },\n            _onDrop = () => { },\n            _onDestroy = () => { };\n\n        let _container = el.parentNode;\n\n        let _proportions = false;\n\n        if (isDef(options)) {\n\n            const {\n                snap,\n                each,\n                showHandles,\n                restrict,\n                onInit,\n                onDrop,\n                onMove,\n                onResize,\n                onRotate,\n                onDestroy,\n                container,\n                proportions\n            } = options;\n\n            if (isDef(snap)) {\n\n                const { x, y, angle } = snap;\n\n                _snap.x = isUndef(x) ? 10 : x;\n                _snap.y = isUndef(y) ? 10 : y;\n                _snap.angle = isUndef(angle)\n                    ? _snap.angle\n                    : angle * RAD;\n            }\n\n            if (isDef(each)) {\n\n                const { move, resize, rotate } = each;\n\n                _each.move = move || false;\n                _each.resize = resize || false;\n                _each.rotate = rotate || false;\n            }\n\n            if (isDef(restrict)) {\n                _restrict = restrict === 'parent'\n                    ? el.parentNode\n                    : Helper(restrict)[0] || document\n            }\n\n            _showHandles = isUndef(showHandles) ||\n                showHandles === true;\n\n            _container = Helper(container)[0] || _container;\n\n            _proportions = proportions || false;\n\n\n            _onInit = createEvent(onInit);\n            _onDrop = createEvent(onDrop);\n            _onMove = createEvent(onMove);\n            _onResize = createEvent(onResize);\n            _onRotate = createEvent(onRotate);\n            _onDestroy = createEvent(onDestroy);\n\n            _onInit.call(this, el);\n        }\n\n        this.storage = {\n            showHandles: _showHandles,\n            restrict: _restrict,\n            container: _container,\n            snap: _snap,\n            each: _each,\n            proportions: _proportions\n        };\n\n        this.proxyMethods = {\n            onInit: _onInit,\n            onDrop: _onDrop,\n            onMove: _onMove,\n            onResize: _onResize,\n            onRotate: _onRotate,\n            onDestroy: _onDestroy\n        };\n\n        if (_each.move || _each.resize || _each.rotate) {\n            Ob.subscribe('ongetstate', this);\n            Ob.subscribe('onapply', this);\n        }\n\n        if (_each.move) {\n            Ob.subscribe('onmove', this);\n        }\n        if (_each.resize) {\n            Ob.subscribe('onresize', this);\n        }\n        if (_each.rotate) {\n            Ob.subscribe('onrotate', this);\n        }\n    }\n\n    _draw() {\n        this._animate();\n    }\n\n    _animate() {\n\n        const ctx = this;\n        const { storage } = ctx;\n\n        if (isUndef(storage)) return;\n\n        storage.frame = requestAnimFrame(ctx._animate);\n\n        if (!storage.doDraw) return;\n        storage.doDraw = false;\n\n        let {\n            handle,\n            handles,\n            cx,\n            cy,\n            nx,\n            ny,\n            pressang,\n            clientX,\n            clientY,\n            center,\n            snap,\n            doDrag,\n            doResize,\n            doRotate,\n            revX,\n            revY\n        } = storage;\n\n        const {\n            move: moveEach,\n            resize: resizeEach,\n            rotate: rotateEach\n        } = storage.each;\n\n        if (doResize) {\n\n            const { x, y } = this._pointToElement(\n                {\n                    x: clientX,\n                    y: clientY\n                }\n            );\n\n            let dx = snapToGrid(x - cx, snap.x),\n                dy = snapToGrid(y - cy, snap.y);\n\n            const dox = handle.is(handles.ml) ||\n                handle.is(handles.mr) ||\n                handle.is(handles.tl) ||\n                handle.is(handles.tr) ||\n                handle.is(handles.bl) ||\n                handle.is(handles.br);\n\n            const doy = handle.is(handles.br) ||\n                handle.is(handles.bl) ||\n                handle.is(handles.bc) ||\n                handle.is(handles.tr) ||\n                handle.is(handles.tl) ||\n                handle.is(handles.tc);\n\n            dx = dox ? (revX ? - dx : dx) : 0,\n                dy = doy ? (revY ? - dy : dy) : 0;\n\n            ctx._resize(\n                dx,\n                dy\n            );\n\n            if (resizeEach) {\n\n                ctx.Ob.notify('onresize',\n                    ctx,\n                    {\n                        dx,\n                        dy\n                    }\n                );\n            }\n        }\n\n        if (doDrag) {\n\n            const dx = snapToGrid(clientX - nx, snap.x),\n                dy = snapToGrid(clientY - ny, snap.y);\n\n            ctx._drag(\n                dx,\n                dy\n            );\n\n            if (moveEach) {\n                ctx.Ob.notify('onmove',\n                    ctx,\n                    {\n                        dx,\n                        dy\n                    }\n                );\n            }\n        }\n\n        if (doRotate) {\n\n            const radians = Math.atan2(\n                clientY - center.y,\n                clientX - center.x\n            ) - pressang;\n\n            ctx._rotate(\n                snapToGrid(radians, snap.angle)\n            );\n\n            if (rotateEach) {\n                ctx.Ob.notify('onrotate',\n                    ctx,\n                    {\n                        radians\n                    }\n                );\n            }\n        }\n    }\n\n    _start(e) {\n\n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n\n        const { storage } = this;\n        const computed = this._compute(e);\n\n        Object.keys(computed).forEach(prop => {\n            storage[prop] = computed[prop];\n        });\n\n        const {\n            onRightEdge,\n            onBottomEdge,\n            onTopEdge,\n            onLeftEdge,\n            handle,\n            factor,\n            revX,\n            revY\n        } = computed;\n\n        const doResize = onRightEdge ||\n            onBottomEdge ||\n            onTopEdge ||\n            onLeftEdge;\n\n        const doRotate = handle.is(storage.handles.rotator);\n\n        const {\n            clientX,\n            clientY,\n            ctrlKey\n        } = e;\n\n        const {\n            x,\n            y\n        } = this._cursorPoint(\n            {\n                clientX,\n                clientY\n            }\n        );\n\n        const {\n            x: nx,\n            y: ny\n        } = this._pointToElement({ x, y });\n\n        storage.clientX = clientX;\n        storage.clientY = clientY;\n        storage.nx = x;\n        storage.ny = y;\n        storage.cx = nx;\n        storage.cy = ny;\n        storage.ctrlKey = ctrlKey;\n        storage.doResize = doResize;\n        storage.doDrag = !doRotate && !doResize;\n        storage.doRotate = doRotate;\n        storage.onExecution = true;\n\n        this.Ob.notify(\n            'ongetstate',\n            this,\n            {\n                factor,\n                revX,\n                revY\n            }\n        );\n\n        this._draw();\n    }\n\n    _moving(e) {\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n\n        const { storage } = this;\n\n        const { x, y } = this._cursorPoint(e);\n\n        storage.clientX = x;\n        storage.clientY = y;\n        storage.doDraw = true;\n    }\n\n    _end(e) {\n\n        if (isDef(e) && e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n\n        const {\n            storage,\n            proxyMethods\n        } = this;\n\n        const action = storage.doResize\n            ? 'resize'\n            : (storage.doDrag ? 'drag' : 'rotate');\n\n        storage.doResize = false;\n        storage.doDrag = false;\n        storage.doRotate = false;\n        storage.doDraw = false;\n        storage.onExecution = false;\n\n        this._apply(action);\n\n        this.Ob.notify(\n            'onapply',\n            this,\n            action\n        );\n\n        cancelAnimFrame(storage.frame);\n        proxyMethods.onDrop.call(this, e, this.el);\n    }\n\n    _onMouseDown(e) {\n        this._start(e);\n        Helper(document)\n            .on('mousemove', this._onMouseMove)\n            .on('mouseup', this._onMouseUp);\n    }\n\n    _onTouchStart(e) {\n        this._start(e.touches[0]);\n        Helper(document)\n            .on('touchmove', this._onTouchMove)\n            .on('touchend', this._onTouchEnd);\n    }\n\n    _onMouseMove(e) {\n        this._moving(\n            e,\n            this.el\n        );\n    }\n\n    _onTouchMove(e) {\n        this._moving(\n            e.touches[0],\n            this.el\n        );\n    }\n\n    _onMouseUp(e) {\n        Helper(document)\n            .off('mousemove', this._onMouseMove)\n            .off('mouseup', this._onMouseUp);\n        this._end(\n            e,\n            this.el\n        );\n    }\n\n    _onTouchEnd(e) {\n        Helper(document)\n            .off('touchmove', this._onTouchMove)\n            .off('touchend', this._onTouchEnd);\n        if (e.touches.length === 0) {\n            this._end(\n                e.changedTouches[0],\n                this.el)\n                ;\n        }\n    }\n\n    notifyMove(data) {\n\n        const {\n            dx,\n            dy\n        } = data;\n\n        this._drag(\n            dx,\n            dy\n        );\n    }\n\n    notifyRotate(data) {\n\n        const {\n            snap\n        } = this.storage;\n\n        this._rotate(\n            snapToGrid(data.radians, snap.angle)\n        );\n    }\n\n    notifyResize(data) {\n\n        const {\n            dx,\n            dy,\n            dox,\n            doy\n        } = data;\n\n        this._resize(\n            dx,\n            dy,\n            dox,\n            doy\n        );\n    }\n\n    notifyApply(actionName) {\n        this._apply(actionName);\n    }\n\n    notifyGetState(data) {\n\n        const store = this.storage;\n\n        const recalc = this._getState(\n            data\n        );\n\n        Object.keys(recalc).forEach(key => {\n            store[key] = recalc[key];\n        });\n    }\n}\n\nfunction createEvent(fn) {\n    return isFunc(fn)\n        ? function () {\n            fn.call(this, ...arguments);\n        }\n        : () => { };\n}","import { Helper } from '../helper'\nimport Subject from './subject'\n\nimport {\n    addClass,\n    getTransform,\n    parseMatrix,\n    getOffset\n} from '../util/css-util'\n\nimport {\n    rotatedTopLeft,\n    toPX,\n    fromPX,\n    getUnitDimension,\n    floatToFixed\n} from './common'\n\nconst MIN_SIZE = 2;\nconst BRACKETS = `\n        <div class=\"dg dg-normal\"></div>\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>\n        <div class=\"dg-hdl dg-rotator\"></div>`;\n\nexport default class Draggable extends Subject {\n\n    constructor(el, options, Observable) {\n        super(el, Observable);\n        this.enable(options);\n    }\n\n    _init(sel) {\n\n        const { storage } = this;\n\n        const container = document.createElement('div');\n\n        addClass(container, 'dg-wrapper');\n        sel.parentNode.insertBefore(container, sel);\n\n        const _sel = Helper(sel);\n\n        const {\n            left,\n            top,\n            width,\n            height\n        } = sel.style;\n\n        const w = width || _sel.css('width'),\n            h = height || _sel.css('height'),\n            t = top || _sel.css('top'),\n            l = left || _sel.css('left');\n\n        const _parent = Helper(container.parentNode);\n\n        const css = {\n            top: t,\n            left: l,\n            width: w,\n            height: h,\n            transform: getTransform(_sel)\n        };\n\n        const controls = document.createElement('div');\n        controls.innerHTML = BRACKETS;\n\n        addClass(controls, 'dg-controls');\n\n        container.appendChild(controls);\n\n        const _controls = Helper(controls);\n        _controls.css(css);\n\n        const _container = Helper(container);\n\n        Object.assign(storage, {\n            controls,\n            handles: {\n                tl: _container.find('.dg-hdl-tl'),\n                tr: _container.find('.dg-hdl-tr'),\n                br: _container.find('.dg-hdl-br'),\n                bl: _container.find('.dg-hdl-bl'),\n                tc: _container.find('.dg-hdl-tc'),\n                bc: _container.find('.dg-hdl-bc'),\n                ml: _container.find('.dg-hdl-ml'),\n                mr: _container.find('.dg-hdl-mr'),\n                rotator: _container.find('.dg-rotator')\n            },\n            parent: _parent\n        });\n\n        _controls.on('mousedown', this._onMouseDown)\n            .on('touchstart', this._onTouchStart);\n    }\n\n    _destroy() {\n\n        const {\n            controls,\n            container\n        } = this.storage;\n\n        Helper(controls)\n            .off('mousedown', this._onMouseDown)\n            .off('touchstart', this._onTouchStart);\n\n        container.removeChild(controls.parentNode);\n    }\n\n    _compute(e) {\n\n        const {\n            handles,\n        } = this.storage;\n\n        const handle = Helper(e.target);\n\n        //reverse axis\n        const revX = handle.is(handles.tl) ||\n            handle.is(handles.ml) ||\n            handle.is(handles.bl) ||\n            handle.is(handles.tc);\n\n        const revY = handle.is(handles.tl) ||\n            handle.is(handles.tr) ||\n            handle.is(handles.tc) ||\n            handle.is(handles.ml);\n\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\n\n        //reverse angle\n        const factor = handle.is(handles.tr) ||\n            handle.is(handles.bl)\n            ? -1\n            : 1;\n\n        const _computed = this._getState({\n            factor,\n            revX,\n            revY\n        });\n\n        const {\n            x: clientX,\n            y: clientY\n        } = this._cursorPoint(e);\n\n        const pressang = Math.atan2(\n            clientY - _computed.center.y,\n            clientX - _computed.center.x\n        );\n\n        _computed.onTopEdge = onTopEdge;\n        _computed.onLeftEdge = onLeftEdge;\n        _computed.onRightEdge = onRightEdge;\n        _computed.onBottomEdge = onBottomEdge;\n        _computed.handle = handle;\n        _computed.pressang = pressang;\n\n        return _computed;\n    }\n\n    _pointToElement(data) {\n\n        const {\n            transform,\n        } = this.storage;\n\n        const {\n            x,\n            y\n        } = data;\n\n        const ctm = [...transform.matrix];\n        ctm[4] = ctm[5] = 0;\n\n        return multiplyMatrixAndPoint(\n            {\n                x,\n                y\n            },\n            matrixInvert(ctm)\n        );\n    }\n\n    _cursorPoint(e) {\n\n        const {\n            container\n        } = this.storage;\n\n        const globalMatrix = parseMatrix(\n            getTransform(Helper(container))\n        );\n\n        return multiplyMatrixAndPoint(\n            {\n                x: e.clientX,\n                y: e.clientY\n            },\n            matrixInvert(\n                globalMatrix\n            )\n        );\n    }\n\n    _apply() {\n\n        const {\n            storage,\n            el\n        } = this;\n\n        const _el = Helper(el);\n\n        const {\n            cached,\n            parent,\n            dimens,\n            controls\n        } = storage;\n\n        if (!cached) return;\n\n        const matrix = [...cached];\n\n        const pW = parent.css('width'),\n            pH = parent.css('height');\n\n        const diffLeft = matrix[4];\n        const diffTop = matrix[5];\n\n        matrix[4] = 0;\n        matrix[5] = 0;\n\n        const css = matrixToCSS(matrix);\n\n        const left = parseFloat(\n            toPX(\n                _el[0].style.left || _el.css('left'),\n                pW\n            )\n        );\n\n        const top = parseFloat(\n            toPX(\n                _el[0].style.top || _el.css('top'),\n                pH\n            )\n        );\n\n        css.left = fromPX(\n            left + diffLeft + 'px',\n            pW,\n            dimens.left\n        );\n\n        css.top = fromPX(\n            top + diffTop + 'px',\n            pH,\n            dimens.top\n        );\n\n        _el.css(css);\n        Helper(controls).css(css);\n\n        this.storage.cached = null;\n    }\n\n    getControls() {\n        return this.storage.controls;\n    }\n\n    _processResize(dx, dy) {\n        const {\n            el,\n            storage\n        } = this;\n\n        const {\n            controls,\n            coords,\n            cw,\n            ch,\n            dimens,\n            parent,\n            transform,\n            refang,\n            revX,\n            revY\n        } = storage;\n\n        const { style } = controls;\n\n        // if proportions is set to true, then scale proportionally\n        const newWidth = this.storage.proportions ? cw * ((cw + dx) / cw) : cw + dx,\n            newHeight = this.storage.proportions ? ch * ((cw + dx) / cw) : ch + dy;\n\n        if (newWidth < MIN_SIZE || newHeight < MIN_SIZE) return;\n\n        style.width = `${newWidth}px`;\n        style.height = `${newHeight}px`;\n\n        const matrix = [...transform.matrix];\n\n        const newCoords = rotatedTopLeft(\n            matrix[4],\n            matrix[5],\n            newWidth,\n            newHeight,\n            refang,\n            revX,\n            revY\n        );\n\n        matrix[4] -= (newCoords.left - coords.left);\n        matrix[5] -= (newCoords.top - coords.top);\n\n        const css = matrixToCSS(matrix);\n\n        Helper(controls).css(css);\n\n        css.width = fromPX(\n            style.width,\n            parent.css('width'),\n            dimens.width\n        );\n\n        css.height = fromPX(\n            style.height,\n            parent.css('height'),\n            dimens.height\n        );\n\n        Helper(el).css(css);\n        storage.cached = matrix;\n    }\n\n    _processMove(dx, dy) {\n        const {\n            el,\n            storage\n        } = this;\n\n        const {\n            controls,\n            transform\n        } = storage;\n\n        const {\n            matrix,\n            parentMatrix\n        } = transform;\n\n        // const pctm = [...parentMatrix];\n        // pctm[4] = pctm[5] = 0;\n\n        // const { x, y } = multiplyMatrixAndPoint(\n        //     {\n        //         x: dx,\n        //         y: dy\n        //     },\n        //     matrixInvert(pctm)\n        // );\n\n        const n_matrix = [...matrix];\n\n        n_matrix[4] = matrix[4] + dx;\n        n_matrix[5] = matrix[5] + dy;\n\n        const css = matrixToCSS(n_matrix);\n\n        Helper(controls).css(css);\n        Helper(el).css(css);\n\n        storage.cached = n_matrix;\n    }\n\n    _processRotate(radians) {\n\n        const {\n            el,\n            storage\n        } = this;\n\n        const {\n            controls,\n            transform\n        } = storage;\n\n        const {\n            matrix,\n            parentMatrix\n        } = transform;\n\n        const cos = floatToFixed(Math.cos(radians)),\n            sin = floatToFixed(Math.sin(radians));\n\n        const rotMatrix = [\n            cos,\n            sin,\n            -sin,\n            cos,\n            0,\n            0\n        ];\n\n        const pctm = [...parentMatrix];\n        pctm[4] = pctm[5] = 0;\n\n        const resRotMatrix = multiplyMatrix(\n            matrixInvert(pctm),\n            multiplyMatrix(rotMatrix, pctm)\n        );\n\n        const resMatrix = multiplyMatrix(resRotMatrix, matrix);\n\n        const css = matrixToCSS(resMatrix);\n\n        Helper(controls).css(css);\n        Helper(el).css(css);\n\n        storage.cached = resMatrix;\n    }\n\n    _getState(params) {\n\n        const {\n            factor,\n            revX,\n            revY\n        } = params;\n\n        const {\n            el,\n            storage\n        } = this;\n\n        const {\n            handles,\n            controls,\n            parent\n        } = storage;\n\n        const tl_off = getOffset(handles.tl[0]),\n            tr_off = getOffset(handles.tr[0]);\n\n        const refang = Math.atan2(\n            tr_off.top - tl_off.top,\n            tr_off.left - tl_off.left\n        ) * factor;\n\n        const cw = parseFloat(\n            toPX(controls.style.width, parent.css('width'))\n        );\n        const ch = parseFloat(\n            toPX(controls.style.height, parent.css('height'))\n        );\n\n        const _el = Helper(el);\n        const styleList = el.style;\n\n        const dimens = {\n            top: getUnitDimension(styleList.top || _el.css('top')),\n            left: getUnitDimension(styleList.left || _el.css('left')),\n            width: getUnitDimension(styleList.width || _el.css('width')),\n            height: getUnitDimension(styleList.height || _el.css('height'))\n        };\n\n        const transform = {\n            matrix: parseMatrix(\n                getTransform(Helper(controls))\n            ),\n            parentMatrix: parseMatrix(\n                getTransform(parent)\n            )\n        };\n\n        //getting current coordinates considering rotation angle                                                                                                  \n        const coords = rotatedTopLeft(\n            transform.matrix[4],\n            transform.matrix[5],\n            cw,\n            ch,\n            refang,\n            revX,\n            revY\n        );\n\n        const offset_ = getOffset(el);\n\n        const center_x = offset_.left + cw / 2,\n            center_y = offset_.top + ch / 2;\n\n        const { x, y } = multiplyMatrixAndPoint(\n            {\n                x: center_x,\n                y: center_y\n            },\n            matrixInvert(transform.parentMatrix)\n        );\n\n        return {\n            transform,\n            cw,\n            ch,\n            coords,\n            center: {\n                x,\n                y\n            },\n            factor,\n            refang,\n            revX,\n            revY,\n            dimens\n        }\n    }\n}\n\nfunction matrixToCSS(arr) {\n\n    const style = `matrix(${arr.join()})`;\n\n    return {\n        transform: style,\n        webkitTranform: style,\n        mozTransform: style,\n        msTransform: style,\n        otransform: style\n    }\n}\n\nfunction multiplyMatrixAndPoint(point, matrix) {\n\n    const {\n        x, y\n    } = point;\n\n    const [a, b, c, d, e, f] = matrix;\n\n    return {\n        x: a * x + c * y + e,\n        y: b * x + d * y + f\n    };\n}\n\n//http://blog.acipo.com/matrix-inversion-in-javascript/\nfunction matrixInvert(ctm) {\n    // I use Guassian Elimination to calculate the inverse:\n    // (1) 'augment' the matrix (left) by the identity (on the right)\n    // (2) Turn the matrix on the left into the identity by elemetry row ops\n    // (3) The matrix on the right is the inverse (was the identity matrix)\n    // There are 3 elemtary row ops: (I combine b and c in my code)\n    // (a) Swap 2 rows\n    // (b) Multiply a row by a scalar\n    // (c) Add 2 rows\n\n    const M = [\n        [ctm[0], ctm[2], ctm[4]],\n        [ctm[1], ctm[3], ctm[5]],\n        [0, 0, 1]\n    ];\n\n    //if the matrix isn't square: exit (error)\n    if (M.length !== M[0].length) {\n        return;\n    }\n\n    //create the identity matrix (I), and a copy (C) of the original\n    const dim = M.length;\n\n    const I = [],\n        C = [];\n\n    for (let i = 0; i < dim; i += 1) {\n        // Create the row\n        I[I.length] = [];\n        C[C.length] = [];\n        for (let j = 0; j < dim; j += 1) {\n\n            //if we're on the diagonal, put a 1 (for identity)\n            if (i == j) {\n                I[i][j] = 1;\n            } else {\n                I[i][j] = 0;\n            }\n\n            // Also, make the copy of the original\n            C[i][j] = M[i][j];\n        }\n    }\n\n    // Perform elementary row operations\n    for (let i = 0; i < dim; i += 1) {\n        // get the element e on the diagonal\n        let e = C[i][i];\n\n        // if we have a 0 on the diagonal (we'll need to swap with a lower row)\n        if (e === 0) {\n            //look through every row below the i'th row\n            for (let ii = i + 1; ii < dim; ii += 1) {\n                //if the ii'th row has a non-0 in the i'th col\n                if (C[ii][i] !== 0) {\n                    //it would make the diagonal have a non-0 so swap it\n                    for (let j = 0; j < dim; j++) {\n                        e = C[i][j]; //temp store i'th row\n                        C[i][j] = C[ii][j]; //replace i'th row by ii'th\n                        C[ii][j] = e; //repace ii'th by temp\n                        e = I[i][j]; //temp store i'th row\n                        I[i][j] = I[ii][j]; //replace i'th row by ii'th\n                        I[ii][j] = e; //repace ii'th by temp\n                    }\n                    //don't bother checking other rows since we've swapped\n                    break;\n                }\n            }\n            //get the new diagonal\n            e = C[i][i];\n            //if it's still 0, not invertable (error)\n            if (e === 0) {\n                return\n            }\n        }\n\n        // Scale this row down by e (so we have a 1 on the diagonal)\n        for (let j = 0; j < dim; j++) {\n            C[i][j] = C[i][j] / e; //apply to original matrix\n            I[i][j] = I[i][j] / e; //apply to identity\n        }\n\n        // Subtract this row (scaled appropriately for each row) from ALL of\n        // the other rows so that there will be 0's in this column in the\n        // rows above and below this one\n        for (let ii = 0; ii < dim; ii++) {\n            // Only apply to other rows (we want a 1 on the diagonal)\n            if (ii == i) {\n                continue;\n            }\n\n            // We want to change this element to 0\n            e = C[ii][i];\n\n            // Subtract (the row above(or below) scaled by e) from (the\n            // current row) but start at the i'th column and assume all the\n            // stuff left of diagonal is 0 (which it should be if we made this\n            // algorithm correctly)\n            for (let j = 0; j < dim; j++) {\n                C[ii][j] -= e * C[i][j]; //apply to original matrix\n                I[ii][j] -= e * I[i][j]; //apply to identity\n            }\n        }\n    }\n\n    //we've done all operations, C should be the identity\n    //matrix I should be the inverse:\n    return [\n        I[0][0], I[1][0],\n        I[0][1], I[1][1],\n        I[0][2], I[1][2]\n    ];\n}\n\nfunction multiplyMatrix(mtrx1, mtrx2) {\n\n    const m1 = [\n        [mtrx1[0], mtrx1[2], mtrx1[4]],\n        [mtrx1[1], mtrx1[3], mtrx1[5]],\n        [0, 0, 1]\n    ];\n\n    const m2 = [\n        [mtrx2[0], mtrx2[2], mtrx2[4]],\n        [mtrx2[1], mtrx2[3], mtrx2[5]],\n        [0, 0, 1]\n    ];\n\n    const result = [];\n\n    for (let j = 0; j < m2.length; j++) {\n        result[j] = [];\n        for (let k = 0; k < m1[0].length; k++) {\n            let sum = 0;\n            for (let i = 0; i < m1.length; i++) {\n                sum += m1[i][k] * m2[j][i];\n            }\n            result[j].push(sum);\n        }\n    }\n\n    return [\n        result[0][0], result[1][0],\n        result[0][1], result[1][1],\n        result[0][2], result[1][2]\n    ];\n}","import { warn } from './../../util/util'\n\nexport const ALLOWED_ELEMENTS = [\n    'circle', 'ellipse',\n    'image', 'line',\n    'path', 'polygon',\n    'polyline', 'rect',\n    'text', 'g'\n];\n\nexport function createSVGElement(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nexport function createSVGMatrix() {\n    return createSVGElement('svg').createSVGMatrix();\n}\n\nexport function getTransformToElement(toElement, g) {\n    const gTransform = g.getScreenCTM() || createSVGMatrix();\n    return gTransform.inverse().multiply(\n        toElement.getScreenCTM() || createSVGMatrix()\n    );\n}\n\nexport function matrixToString(m) {\n    return `matrix(${m.a},${m.b},${m.c},${m.d},${m.e},${m.f})`;\n}\n\nexport function pointTo(ctm, svg, x, y) {\n    const pt = svg.createSVGPoint();\n    pt.x = x;\n    pt.y = y;\n    return pt.matrixTransform(ctm);\n}\n\nexport function cloneMatrix(b) {\n\n    const a = createSVGMatrix();\n\n    a.a = b.a;\n    a.b = b.b;\n    a.c = b.c;\n    a.d = b.d;\n    a.e = b.e;\n    a.f = b.f;\n\n    return a;\n}\n\nexport function checkElement(sel) {\n\n    const tagName = sel.tagName.toLowerCase();\n\n    if (ALLOWED_ELEMENTS.indexOf(tagName) === -1) {\n        warn(\n            'Selected element is not allowed to transform. Allowed elements:\\n' +\n            'circle, ellipse, image, line, path, polygon, polyline, rect, text, g'\n        );\n        return false;\n    } else {\n        return true;\n    }\n}","import {\n    warn\n} from './../../util/util'\n\nimport {\n    pointTo,\n    cloneMatrix\n} from './util'\n\nconst dRE = /\\s*([achlmqstvz])([^achlmqstvz]*)\\s*/gi;\nconst sepRE = /\\s*,\\s*|\\s+/g;\n\nfunction parsePath(path) {\n\n    let match = dRE.lastIndex = 0;\n\n    const serialized = [];\n\n    while ((match = dRE.exec(path))) {\n\n        const cmd = match[1];\n        const upCmd = cmd.toUpperCase();\n\n        // normalize the data\n        const data = match[2]\n            .replace(/([^e])-/g, '$1 -')\n            .replace(/ +/g, ' ');\n\n        serialized.push({\n            relative: cmd !== upCmd,\n            key: upCmd,\n            cmd: cmd,\n            values: data.trim().split(sepRE).map(val => {\n                if (!isNaN(val)) {\n                    return Number(val);\n                }\n            })\n        });\n    }\n\n    return serialized;\n}\n\nexport function movePath(params) {\n\n    const {\n        path,\n        dx,\n        dy\n    } = params;\n\n    try {\n\n        const serialized = parsePath(path);\n\n        let str = '';\n        let space = ' ';\n\n        let firstCommand = true;\n\n        for (let i = 0, len = serialized.length; i < len; i++) {\n\n            const item = serialized[i];\n\n            const {\n                values,\n                key: cmd,\n                relative\n            } = item;\n\n            const coordinates = [];\n\n            switch (cmd) {\n\n                case 'M': {\n\n                    for (let k = 0, len = values.length; k < len; k += 2) {\n\n                        const [x, y] = values.slice(k, k + 2);\n\n                        if (!(relative && !firstCommand)) {\n                            x += dx;\n                            y += dy;\n                        }\n\n                        coordinates.push(\n                            x,\n                            y\n                        );\n\n                        firstCommand = false;\n                    }\n                    break;\n                }\n                case 'A': {\n\n                    for (let k = 0, len = values.length; k < len; k += 7) {\n\n                        const set = values.slice(k, k + 7);\n\n                        if (!relative) {\n                            set[5] = set[5] + dx;\n                            set[6] = set[6] + dy;\n                        }\n\n                        coordinates.push(...set);\n                    }\n                    break;\n                }\n                case 'C': {\n\n                    for (let k = 0, len = values.length; k < len; k += 6) {\n\n                        const set = values.slice(k, k + 6);\n\n                        if (!relative) {\n                            set[0] = set[0] + dx;\n                            set[1] = set[1] + dy;\n                            set[2] = set[2] + dx;\n                            set[3] = set[3] + dy;\n                            set[4] = set[4] + dx;\n                            set[5] = set[5] + dy;\n                        }\n\n                        coordinates.push(...set);\n                    }\n                    break;\n                }\n                case 'H': {\n\n                    for (let k = 0, len = values.length; k < len; k += 1) {\n\n                        const set = values.slice(k, k + 1);\n\n                        if (!relative) {\n                            set[0] += dx;\n                        }\n\n                        coordinates.push(set[0]);\n                    }\n\n                    break;\n                }\n                case 'V': {\n\n                    for (let k = 0, len = values.length; k < len; k += 1) {\n\n                        const set = values.slice(k, k + 1);\n\n                        if (!relative) {\n                            set[0] += dy;\n                        }\n                        coordinates.push(set[0]);\n                    }\n\n                    break;\n                }\n                case 'L':\n                case 'T': {\n\n                    for (let k = 0, len = values.length; k < len; k += 2) {\n\n                        const [x, y] = values.slice(k, k + 2);\n\n                        if (!relative) {\n                            x += dx;\n                            y += dy;\n                        }\n\n                        coordinates.push(\n                            x,\n                            y\n                        );\n                    }\n                    break;\n                }\n\n                case 'Q':\n                case 'S': {\n\n                    for (let k = 0, len = values.length; k < len; k += 4) {\n\n                        const [x1, y1, x2, y2] = values.slice(k, k + 4);\n\n                        if (!relative) {\n                            x1 += dx;\n                            y1 += dy;\n                            x2 += dx;\n                            y2 += dy;\n                        }\n\n                        coordinates.push(\n                            x1,\n                            y1,\n                            x2,\n                            y2\n                        );\n                    }\n                    break;\n                }\n                case 'Z':\n                    values[0] = '';\n                    space = '';\n                    break;\n            }\n\n            str += item.cmd + coordinates.join(',') + space;\n        }\n\n        return str;\n\n    } catch (err) {\n        warn('Path parsing error: ' + err);\n    }\n}\n\nexport function resizePath(params) {\n\n    const {\n        path,\n        localCTM,\n        container\n    } = params;\n\n    try {\n\n        const serialized = parsePath(path);\n\n        let str = '';\n        let space = ' ';\n\n        const res = [];\n\n        let firstCommand = true;\n\n        for (let i = 0, len = serialized.length; i < len; i++) {\n\n            const item = serialized[i];\n\n            const {\n                values,\n                key: cmd,\n                relative\n            } = item;\n\n            switch (cmd) {\n\n                case 'A': {\n\n                    //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 7) {\n\n                        const [rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y] =\n                            values.slice(k, k + 7);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX,\n                            y: resY\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x,\n                            y\n                        );\n\n                        coordinates.push(\n                            resX,\n                            resY\n                        );\n\n                        mtrx.e = mtrx.f = 0;\n\n                        const {\n                            x: newRx,\n                            y: newRy\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            rx,\n                            ry\n                        );\n\n                        coordinates.unshift(\n                            newRx,\n                            newRy,\n                            x_axis_rot,\n                            large_arc_flag,\n                            sweep_flag\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n\n                case 'C': {\n\n                    //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 6) {\n\n                        const [x1, y1, x2, y2, x, y] = values.slice(k, k + 6);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX1,\n                            y: resY1\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x1,\n                            y1\n                        );\n\n                        const {\n                            x: resX2,\n                            y: resY2\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x2,\n                            y2\n                        );\n\n                        const {\n                            x: resX,\n                            y: resY\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x,\n                            y\n                        );\n\n                        coordinates.push(\n                            resX1,\n                            resY1,\n                            resX2,\n                            resY2,\n                            resX,\n                            resY\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n                // this command make impossible free transform within group\n                // todo: use only proportional resizing or need to be converted to L\n                case 'H': {\n\n                    // H x (or h dx)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 1) {\n\n                        const [x] = values.slice(k, k + 1);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x,\n                            0\n                        );\n\n                        coordinates.push(\n                            resX\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n                // this command make impossible free transform within group\n                // todo: use only proportional resizing or need to be converted to L\n                case 'V': {\n\n                    // V y (or v dy)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 1) {\n\n                        const [y] = values.slice(k, k + 1);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            y: resY\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            0,\n                            y\n                        );\n\n                        coordinates.push(\n                            resY\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n\n                case 'T': // T x y (or t dx dy)\n                case 'L': {\n\n                    // L x y (or l dx dy)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 2) {\n\n                        const [x, y] = values.slice(k, k + 2);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX,\n                            y: resY\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x,\n                            y\n                        );\n\n                        coordinates.push(\n                            resX,\n                            resY\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n\n                case 'M': {\n\n                    // M x y (or dx dy)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 2) {\n\n                        const [x, y] = values.slice(k, k + 2);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative && !firstCommand) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX,\n                            y: resY\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x,\n                            y\n                        );\n\n                        coordinates.push(\n                            resX,\n                            resY\n                        );\n\n                        firstCommand = false;\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n\n                case 'Q': {\n\n                    //Q x1 y1, x y (or q dx1 dy1, dx dy)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 4) {\n\n                        const [x1, y1, x, y] = values.slice(k, k + 4);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX1,\n                            y: resY1\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x1,\n                            y1\n                        );\n\n                        const {\n                            x: resX,\n                            y: resY\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x,\n                            y\n                        );\n\n                        coordinates.push(\n                            resX1,\n                            resY1,\n                            resX,\n                            resY\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n\n                case 'S': {\n\n                    //S x2 y2, x y (or s dx2 dy2, dx dy)\n                    const coordinates = [];\n\n                    for (let k = 0, len = values.length; k < len; k += 4) {\n\n                        const [x2, y2, x, y] = values.slice(k, k + 4);\n\n                        const mtrx = cloneMatrix(localCTM);\n\n                        if (relative) {\n                            mtrx.e = mtrx.f = 0;\n                        }\n\n                        const {\n                            x: resX2,\n                            y: resY2\n                        } = pointTo(\n                            mtrx,\n                            container,\n                            x2,\n                            y2\n                        );\n\n                        const {\n                            x: resX,\n                            y: resY\n                        } = pointTo(\n                            localCTM,\n                            container,\n                            x,\n                            y\n                        );\n\n                        coordinates.push(\n                            resX2,\n                            resY2,\n                            resX,\n                            resY\n                        );\n                    }\n\n                    res.push(coordinates);\n                    break;\n                }\n\n                case 'Z': {\n                    res.push(['']);\n                    space = '';\n                    break;\n                }\n            }\n\n            str += item.cmd + res[i].join(',') + space;\n        }\n\n        return str;\n\n    } catch (err) {\n        warn('Path parsing error: ' + err);\n    }\n}","import { Helper } from '../../helper'\nimport Subject from '../subject'\n\nimport {\n    isUndef\n} from '../../util/util'\n\nimport {\n    floatToFixed\n} from '../common'\n\nimport {\n    movePath,\n    resizePath\n} from './path'\n\nimport {\n    ALLOWED_ELEMENTS,\n    createSVGElement,\n    createSVGMatrix,\n    getTransformToElement,\n    matrixToString,\n    pointTo\n} from './util'\n\nconst MIN_SIZE = 2;\nconst ROT_OFFSET = 50;\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g;\n\nexport default class DraggableSVG extends Subject {\n\n    constructor(el, options, Observable) {\n        super(el, Observable);\n        this.enable(options);\n    }\n\n    _init(sel) {\n\n        const { storage } = this;\n\n        const {\n            showHandles,\n            container\n        } = storage;\n\n        const wrapper = createSVGElement('g');\n        container.appendChild(wrapper);\n\n        const {\n            width: cw,\n            height: ch,\n            x: cx,\n            y: cy\n        } = sel.getBBox();\n\n        const elCTM = getTransformToElement(sel, container);\n        const box = createSVGElement('rect');\n\n        const attrs = [\n            ['width', cw],\n            ['height', ch],\n            ['x', cx],\n            ['y', cy],\n            ['fill', 'rgba(0, 168, 255, 0.2)'],\n            ['stroke', '#00a8ff'],\n            ['stroke-dasharray', '3 3'],\n            ['vector-effect', 'non-scaling-stroke'],\n            ['transform', matrixToString(elCTM)]\n        ];\n\n        attrs.forEach(item => {\n            box.setAttribute(item[0], item[1]);\n        });\n\n        const handlesGroup = createSVGElement('g'),\n            normalLineGroup = createSVGElement('g'),\n            group = createSVGElement('g');\n\n        group.appendChild(box);\n        wrapper.appendChild(group);\n        wrapper.appendChild(normalLineGroup);\n        wrapper.appendChild(handlesGroup);\n\n        const {\n            x: bX,\n            y: bY,\n            width: bW,\n            height: bH\n        } = box.getBBox();\n\n        const boxCTM = getTransformToElement(box, box.parentNode);\n\n        const handles = {\n            tl: pointTo(boxCTM, container, bX, bY),\n            tr: pointTo(boxCTM, container, bX + bW, bY),\n            br: pointTo(boxCTM, container, bX + bW, bY + bH),\n            bl: pointTo(boxCTM, container, bX, bY + bH),\n            tc: pointTo(boxCTM, container, bX + bW / 2, bY),\n            bc: pointTo(boxCTM, container, bX + bW / 2, bY + bH),\n            ml: pointTo(boxCTM, container, bX, bY + bH / 2),\n            mr: pointTo(boxCTM, container, bX + bW, bY + bH / 2),\n            //center: pointTo(boxCTM, container, bX + bW / 2, bY + bH / 2),\n            rotator: {}\n        };\n\n        const theta = Math.atan2(\n            handles.tl.y - handles.tr.y,\n            handles.tl.x - handles.tr.x\n        );\n\n        handles.rotator.x = handles.mr.x - ROT_OFFSET * Math.cos(theta);\n        handles.rotator.y = handles.mr.y - ROT_OFFSET * Math.sin(theta);\n\n        const normalLine = createSVGElement('line');\n\n        if (showHandles) {\n\n            normalLine.x1.baseVal.value = handles.mr.x;\n            normalLine.y1.baseVal.value = handles.mr.y;\n            normalLine.x2.baseVal.value = handles.rotator.x;\n            normalLine.y2.baseVal.value = handles.rotator.y;\n\n            normalLine.setAttribute('stroke', '#00a8ff');\n            normalLine.setAttribute('stroke-dasharray', '3 3');\n            normalLine.setAttribute('vector-effect', 'non-scaling-stroke');\n\n            normalLineGroup.appendChild(normalLine);\n        }\n\n        Object.keys(handles).forEach(key => {\n            const data = handles[key];\n            handles[key] = createHandler(data.x, data.y);\n            if (showHandles) {\n                handlesGroup.appendChild(handles[key])\n            }\n        });\n\n        Object.assign(storage, {\n            wrapper,\n            box,\n            handles,\n            normalLine,\n            parent: sel.parentNode\n        });\n\n        Helper(wrapper).on('mousedown', this._onMouseDown)\n            .on('touchstart', this._onTouchStart);\n    }\n\n    _destroy() {\n\n        const {\n            wrapper,\n            container\n        } = this.storage;\n\n        Helper(wrapper)\n            .off('mousedown', this._onMouseDown)\n            .off('touchstart', this._onTouchStart);\n\n        container.removeChild(wrapper);\n    }\n\n    _compute(e) {\n\n        const {\n            storage\n        } = this;\n\n        const {\n            handles\n        } = storage;\n\n        const handle = Helper(e.target);\n\n        //reverse axis\n        const revX = handle.is(handles.tl) ||\n            handle.is(handles.ml) ||\n            handle.is(handles.bl) ||\n            handle.is(handles.tc);\n\n        const revY = handle.is(handles.tl) ||\n            handle.is(handles.tr) ||\n            handle.is(handles.tc) ||\n            handle.is(handles.ml);\n\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\n\n        const _computed = this._getState({\n            revX,\n            revY\n        });\n\n        const {\n            x: clientX,\n            y: clientY\n        } = this._cursorPoint(e);\n\n        const pressang = Math.atan2(\n            clientY - _computed.center.y,\n            clientX - _computed.center.x\n        );\n\n        _computed.onTopEdge = onTopEdge;\n        _computed.onLeftEdge = onLeftEdge;\n        _computed.onRightEdge = onRightEdge;\n        _computed.onBottomEdge = onBottomEdge;\n        _computed.handle = handle;\n        _computed.pressang = pressang;\n\n        return _computed;\n    }\n\n    _cursorPoint(e) {\n\n        const {\n            container\n        } = this.storage;\n\n        return pointTo(\n            container.getScreenCTM().inverse(),\n            container,\n            e.clientX,\n            e.clientY\n        );\n    }\n\n    _pointToElement(data) {\n\n        const {\n            transform,\n            container\n        } = this.storage;\n\n        const {\n            x,\n            y\n        } = data;\n\n        const { ctm } = transform;\n        const matrix = ctm.inverse();\n\n        const pt = container.createSVGPoint();\n        pt.x = x;\n        pt.y = y;\n        matrix.e = matrix.f = 0;\n\n        return pt.matrixTransform(matrix);\n    }\n\n    _apply(actionName) {\n\n        const {\n            el: element,\n            storage\n        } = this;\n\n        const {\n            container,\n            box,\n            handles,\n            normalLine,\n            cached,\n            transform\n        } = storage;\n\n        if (isUndef(cached)) return;\n\n        const {\n            scaleX,\n            scaleY,\n            dx,\n            dy,\n            ox,\n            oy\n        } = cached;\n\n        const {\n            matrix\n        } = transform;\n\n        if (actionName === 'drag') {\n\n            if (dx === 0 && dy === 0) return;\n\n            // create translate matrix for an element\n            const eM = createSVGMatrix();\n\n            eM.e = dx;\n            eM.f = dy;\n\n            const translateMatrix = eM.multiply(matrix)\n                .multiply(eM.inverse());\n\n            element.setAttribute(\n                'transform',\n                matrixToString(translateMatrix)\n            );\n\n            if (isGroup(element)) {\n\n                const els = checkChildElements(element);\n\n                els.forEach(child => {\n\n                    const pt = container.createSVGPoint();\n                    const ctm = getTransformToElement(element.parentNode, container).inverse();\n                    pt.x = ox;\n                    pt.y = oy;\n                    ctm.e = ctm.f = 0;\n                    const newPT = pt.matrixTransform(ctm);\n\n                    // create translate matrix for an element\n                    const eM = createSVGMatrix();\n\n                    eM.e = dx;\n                    eM.f = dy;\n\n                    const translateMatrix = eM.multiply(\n                        getTransformToElement(child, child.parentNode)\n                    ).multiply(eM.inverse());\n\n                    child.setAttribute(\n                        'transform',\n                        matrixToString(translateMatrix)\n                    );\n\n                    if (!isGroup(child)) {\n                        applyTranslate(child, {\n                            x: newPT.x,\n                            y: newPT.y\n                        });\n                    }\n                });\n\n            } else {\n                applyTranslate(element, {\n                    x: dx,\n                    y: dy\n                });\n            }\n        }\n\n        if (actionName === 'resize') {\n\n            const {\n                x,\n                y,\n                width: newWidth,\n                height: newHeight\n            } = box.getBBox();\n\n            applyTransformToHandles(\n                box,\n                handles,\n                normalLine,\n                {\n                    x,\n                    y,\n                    width: newWidth,\n                    height: newHeight\n                },\n                container\n            );\n\n            if (isGroup(element)) {\n\n                const els = checkChildElements(element);\n\n                els.forEach(child => {\n\n                    if (!isGroup(child)) {\n\n                        applyResize(child, {\n                            scaleX,\n                            scaleY,\n                            defaultCTM: child.__ctm__,\n                            bBox: transform.bBox,\n                            container,\n                            storage\n                        });\n                    }\n                });\n\n            } else {\n\n                applyResize(element, {\n                    scaleX,\n                    scaleY,\n                    defaultCTM: transform.ctm,\n                    bBox: transform.bBox,\n                    container,\n                    storage\n                });\n            }\n\n            element.setAttribute(\n                'transform',\n                matrixToString(matrix)\n            );\n        }\n        this.storage.cached = null;\n    }\n\n    getControls() {\n        return this.storage.wrapper;\n    }\n\n    _processResize(dx, dy) {\n\n        const {\n            container,\n            box,\n            handles,\n            normalLine,\n            left,\n            top,\n            cw,\n            ch,\n            transform,\n            revX,\n            revY\n        } = this.storage;\n\n        const {\n            matrix,\n            scMatrix,\n            trMatrix,\n            scaleX: ptX,\n            scaleY: ptY\n        } = transform;\n\n        const { el } = this;\n\n        let {\n            width: newWidth,\n            height: newHeight\n        } = box.getBBox();\n\n        newWidth = cw + dx;\n        newHeight = ch + dy;\n\n        if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\n\n        const scaleX = newWidth / cw,\n            scaleY = newHeight / ch;\n\n        // setup scale matrix\n        scMatrix.a = scaleX;\n        scMatrix.b = 0;\n        scMatrix.c = 0;\n        scMatrix.d = scaleY;\n        scMatrix.e = 0;\n        scMatrix.f = 0;\n\n        // translate compensation matrix\n        trMatrix.e = ptX;\n        trMatrix.f = ptY;\n\n        //now must to do: translate(x y) scale(sx sy) translate(-x -y)\n        const scaleMatrix = trMatrix\n            .multiply(scMatrix)\n            .multiply(trMatrix.inverse());\n\n        const res = matrix.multiply(scaleMatrix);\n\n        el.setAttribute(\n            'transform',\n            matrixToString(res)\n        );\n\n        this.storage.cached = {\n            scaleX,\n            scaleY\n        };\n\n        applyTransformToHandles(\n            box,\n            handles,\n            normalLine,\n            {\n                x: revX ? left - dx : left,\n                y: revY ? top - dy : top,\n                width: newWidth,\n                height: newHeight,\n            },\n            container\n        );\n    }\n\n    _processMove(dx, dy) {\n        const {\n            container,\n            transform,\n            wrapper\n        } = this.storage;\n\n        const {\n            matrix,\n            trMatrix,\n            scMatrix,\n            wrapperMatrix,\n            parentMatrix\n        } = transform;\n\n        scMatrix.e = dx;\n        scMatrix.f = dy;\n\n        const moveWrapper = scMatrix.multiply(wrapperMatrix);\n\n        wrapper.setAttribute(\n            'transform',\n            matrixToString(moveWrapper)\n        );\n\n        parentMatrix.e = parentMatrix.f = 0;\n        const { x, y } = pointTo(\n            parentMatrix.inverse(),\n            container,\n            dx,\n            dy\n        );\n\n        trMatrix.e = x;\n        trMatrix.f = y;\n\n        const moveElement = trMatrix.multiply(matrix);\n\n        this.el.setAttribute(\n            'transform',\n            matrixToString(moveElement)\n        );\n\n        this.storage.cached = {\n            dx: x,\n            dy: y,\n            ox: dx,\n            oy: dy\n        }\n    }\n\n    _processRotate(radians) {\n\n        const {\n            center,\n            transform,\n            wrapper\n        } = this.storage;\n\n        const {\n            matrix,\n            wrapperMatrix,\n            parentMatrix,\n            trMatrix,\n            scMatrix,\n            rotMatrix\n        } = transform;\n\n        const cos = floatToFixed(Math.cos(radians)),\n            sin = floatToFixed(Math.sin(radians));\n\n        // rotate(a cx cy) is equivalent to translate(cx cy) rotate(a) translate(-cx -cy)\n        trMatrix.e = center.x;\n        trMatrix.f = center.y;\n\n        rotMatrix.a = cos;\n        rotMatrix.b = sin;\n        rotMatrix.c = - sin;\n        rotMatrix.d = cos;\n\n        const wrapMatrix = trMatrix.multiply(rotMatrix)\n            .multiply(trMatrix.inverse())\n            .multiply(wrapperMatrix);\n\n        wrapper.setAttribute(\n            'transform',\n            matrixToString(wrapMatrix)\n        );\n\n        scMatrix.e = center.el_x;\n        scMatrix.f = center.el_y;\n\n        parentMatrix.e = parentMatrix.f = 0;\n        const resRotMatrix = parentMatrix.inverse()\n            .multiply(rotMatrix)\n            .multiply(parentMatrix);\n\n        const rotateMatrix = scMatrix.multiply(resRotMatrix)\n            .multiply(scMatrix.inverse());\n\n        const elMatrix = rotateMatrix.multiply(matrix);\n\n        this.el.setAttribute(\n            'transform',\n            matrixToString(elMatrix)\n        );\n    }\n\n    _getState(params) {\n\n        const {\n            revX,\n            revY\n        } = params;\n\n        const {\n            el: element,\n            storage\n        } = this;\n\n        const {\n            container,\n            box,\n            wrapper,\n            parent\n        } = storage;\n\n        const eBBox = this.el.getBBox();\n\n        const {\n            x: el_x,\n            y: el_y,\n            width: el_w,\n            height: el_h\n        } = eBBox;\n\n        const {\n            width: cw,\n            height: ch,\n            x: c_left,\n            y: c_top\n        } = box.getBBox();\n\n        const elMatrix = getTransformToElement(element, parent);\n        const boxGroup = box.parentNode;\n\n        const transform = {\n            matrix: elMatrix,\n            ctm: getTransformToElement(element, container),\n            wrapperMatrix: getTransformToElement(wrapper, wrapper.parentNode),\n            boxCTM: getTransformToElement(boxGroup, container),\n            boxMatrix: getTransformToElement(boxGroup, boxGroup.parentNode),\n            parentMatrix: getTransformToElement(parent, container),\n            trMatrix: createSVGMatrix(),\n            scMatrix: createSVGMatrix(),\n            rotMatrix: createSVGMatrix(),\n            scaleX: (revX ? el_w + el_x : el_x),\n            scaleY: (revY ? el_h + el_y : el_y),\n            bBox: eBBox\n        };\n\n        const hW = cw / 2,\n            hH = ch / 2;\n\n        const boxCenter = pointTo(\n            getTransformToElement(box, container),\n            container,\n            c_left + hW,\n            c_top + hH\n        );\n\n        const elementCenter = pointTo(\n            elMatrix,\n            container,\n            el_x + el_w / 2,\n            el_y + el_h / 2\n        );\n\n        checkChildElements(element).forEach(child => {\n            child.__ctm__ = getTransformToElement(child, container);\n        });\n\n        return {\n            transform,\n            cw,\n            ch,\n            center: {\n                x: boxCenter.x,\n                y: boxCenter.y,\n                el_x: elementCenter.x,\n                el_y: elementCenter.y\n            },\n            left: c_left,\n            top: c_top,\n            revX,\n            revY\n        };\n    }\n}\n\nfunction applyTranslate(element, data) {\n\n    const {\n        x,\n        y\n    } = data;\n\n    const attrs = [];\n\n    switch (element.tagName.toLowerCase()) {\n\n        case 'use':\n        case 'image':\n        case 'text':\n        case 'rect': {\n\n            const resX = Number(element.getAttribute('x')) + x,\n                resY = Number(element.getAttribute('y')) + y;\n\n            attrs.push(\n                ['x', resX],\n                ['y', resY]\n            );\n        }\n            break;\n\n        case 'circle':\n        case 'ellipse': {\n\n            const resX = Number(element.getAttribute('cx')) + x,\n                resY = Number(element.getAttribute('cy')) + y;\n\n            attrs.push(\n                ['cx', resX],\n                ['cy', resY]\n            );\n        }\n            break;\n\n        case 'line': {\n\n            const resX1 = Number(element.getAttribute('x1')) + x,\n                resY1 = Number(element.getAttribute('y1')) + y,\n                resX2 = Number(element.getAttribute('x2')) + x,\n                resY2 = Number(element.getAttribute('y2')) + y;\n\n            attrs.push(\n                ['x1', resX1],\n                ['y1', resY1],\n                ['x2', resX2],\n                ['y2', resY2]\n            );\n        }\n            break;\n\n        case 'polygon':\n        case 'polyline': {\n\n            const points = parsePoints(element.getAttribute('points'));\n            const result = points.map(item => {\n\n                item[0] = Number(item[0]) + x;\n                item[1] = Number(item[1]) + y;\n\n                return item.join(' ');\n            }).join(' ');\n\n            attrs.push(\n                ['points', result]\n            );\n        }\n            break;\n\n        case 'path': {\n\n            const path = element.getAttribute('d');\n\n            attrs.push(['d', movePath(\n                {\n                    path,\n                    dx: x,\n                    dy: y\n                }\n            )]);\n        }\n\n            break;\n\n        default:\n            break;\n    }\n\n    attrs.forEach(item => {\n        element.setAttribute(item[0], item[1]);\n    });\n}\n\nfunction applyResize(element, data) {\n\n    const {\n        scaleX,\n        scaleY,\n        bBox,\n        defaultCTM,\n        container\n    } = data;\n\n    const {\n        width: boxW,\n        height: boxH\n    } = bBox;\n\n    const attrs = [];\n\n    const ctm = getTransformToElement(element, container);\n    const localCTM = defaultCTM.inverse().multiply(ctm);\n\n    switch (element.tagName.toLowerCase()) {\n\n        case 'text': {\n\n            const x = element.x.baseVal.value,\n                y = element.y.baseVal.value;\n\n            const {\n                x: resX,\n                y: resY\n            } = pointTo(\n                localCTM,\n                container,\n                x,\n                y\n            );\n\n            attrs.push(\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\n            );\n        }\n            break;\n\n        case 'circle': {\n\n            const r = element.r.baseVal.value,\n                cx = element.cx.baseVal.value,\n                cy = element.cy.baseVal.value,\n                newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\n\n            const {\n                x: resX,\n                y: resY\n            } = pointTo(\n                localCTM,\n                container,\n                cx,\n                cy\n            );\n\n            attrs.push(\n                ['r', newR],\n                ['cx', resX],\n                ['cy', resY]\n            );\n        }\n            break;\n\n        case 'image':\n        case 'rect': {\n\n            const width = element.width.baseVal.value,\n                height = element.height.baseVal.value,\n                x = element.x.baseVal.value,\n                y = element.y.baseVal.value;\n\n            const {\n                x: resX,\n                y: resY\n            } = pointTo(\n                localCTM,\n                container,\n                x,\n                y\n            );\n\n            localCTM.e = localCTM.f = 0;\n\n            const {\n                x: newW,\n                y: newH\n            } = pointTo(\n                localCTM,\n                container,\n                width,\n                height\n            );\n\n            const newWidth = Math.abs(newW),\n                newHeight = Math.abs(newH);\n\n            attrs.push(\n                ['x', resX - (scaleX < 0 ? newWidth : 0)],\n                ['y', resY - (scaleY < 0 ? newHeight : 0)],\n                ['width', newWidth],\n                ['height', newHeight]\n            );\n        }\n            break;\n\n        case 'ellipse': {\n\n            const rx = element.rx.baseVal.value,\n                ry = element.ry.baseVal.value,\n                cx = element.cx.baseVal.value,\n                cy = element.cy.baseVal.value;\n\n            const {\n                x: cx1,\n                y: cy1\n            } = pointTo(\n                localCTM,\n                container,\n                cx,\n                cy\n            );\n\n            localCTM.e = localCTM.f = 0;\n\n            const {\n                x: nRx,\n                y: nRy\n            } = pointTo(\n                localCTM,\n                container,\n                rx,\n                ry\n            );\n\n            attrs.push(\n                ['rx', Math.abs(nRx)],\n                ['ry', Math.abs(nRy)],\n                ['cx', cx1],\n                ['cy', cy1]\n            );\n        }\n            break;\n\n        case 'line': {\n\n            const resX1 = element.x1.baseVal.value,\n                resY1 = element.y1.baseVal.value,\n                resX2 = element.x2.baseVal.value,\n                resY2 = element.y2.baseVal.value;\n\n            const {\n                x: resX1_,\n                y: resY1_\n            } = pointTo(\n                localCTM,\n                container,\n                resX1,\n                resY1\n            );\n\n            const {\n                x: resX2_,\n                y: resY2_\n            } = pointTo(\n                localCTM,\n                container,\n                resX2,\n                resY2\n            );\n\n            attrs.push(\n                ['x1', resX1_],\n                ['y1', resY1_],\n                ['x2', resX2_],\n                ['y2', resY2_]\n            );\n        }\n            break;\n\n        case 'polygon':\n        case 'polyline': {\n\n            const points = parsePoints(element.getAttribute('points'));\n            const result = points.map(item => {\n\n                const {\n                    x,\n                    y\n                } = pointTo(\n                    localCTM,\n                    container,\n                    Number(item[0]),\n                    Number(item[1])\n                );\n\n                item[0] = x;\n                item[1] = y;\n\n                return item.join(' ');\n\n            }).join(' ');\n\n            attrs.push(['points', result]);\n        }\n            break;\n\n        case 'path': {\n\n            const path = element.getAttribute('d');\n\n            attrs.push(['d', resizePath(\n                {\n                    path,\n                    localCTM,\n                    container\n                }\n            )]);\n        }\n            break;\n\n        default: { }\n            break;\n    }\n\n    attrs.forEach(attr => {\n        element.setAttribute(attr[0], attr[1]);\n    });\n}\n\nfunction applyTransformToHandles(\n    box,\n    handles,\n    normalLine,\n    data,\n    container\n) {\n\n    let {\n        x,\n        y,\n        width,\n        height\n    } = data;\n\n    const hW = width / 2,\n        hH = height / 2;\n\n    const boxCTM = getTransformToElement(\n        box,\n        box.parentNode.parentNode\n    );\n\n    const attrs = {\n        tl: pointTo(boxCTM, container, x, y),\n        tr: pointTo(boxCTM, container, x + width, y),\n        br: pointTo(boxCTM, container, x + width, y + height),\n        bl: pointTo(boxCTM, container, x, y + height),\n        tc: pointTo(boxCTM, container, x + hW, y),\n        bc: pointTo(boxCTM, container, x + hW, y + height),\n        ml: pointTo(boxCTM, container, x, y + hH),\n        mr: pointTo(boxCTM, container, x + width, y + hH),\n        //center: pointTo(boxCTM, container, x + hW, y + hH),\n        rotator: {}\n    };\n\n    const theta = Math.atan2(\n        attrs.tl.y - attrs.tr.y,\n        attrs.tl.x - attrs.tr.x\n    );\n\n    attrs.rotator.x = attrs.mr.x - ROT_OFFSET * Math.cos(theta);\n    attrs.rotator.y = attrs.mr.y - ROT_OFFSET * Math.sin(theta);\n\n    normalLine.x1.baseVal.value = attrs.mr.x;\n    normalLine.y1.baseVal.value = attrs.mr.y;\n    normalLine.x2.baseVal.value = attrs.rotator.x;\n    normalLine.y2.baseVal.value = attrs.rotator.y;\n\n    x = x + (width < 0 ? width : 0);\n    y = y + (height < 0 ? height : 0);\n\n    const boxAttrs = {\n        x,\n        y,\n        width: Math.abs(width),\n        height: Math.abs(height)\n    };\n\n    Object.keys(boxAttrs).forEach(attr => {\n        box.setAttribute(attr, boxAttrs[attr]);\n    });\n\n    Object.keys(handles).forEach(key => {\n        const hdl = handles[key];\n        hdl.setAttribute('cx', attrs[key].x);\n        hdl.setAttribute('cy', attrs[key].y);\n    });\n}\n\nfunction isGroup(element) {\n    return element.tagName.toLowerCase() === 'g';\n}\n\nfunction checkChildElements(element) {\n\n    const arrOfElements = [];\n\n    if (isGroup(element)) {\n\n        element.childNodes.forEach(item => {\n\n            if (item.nodeType === 1) {\n\n                const tagName = item.tagName.toLowerCase();\n\n                if (ALLOWED_ELEMENTS.indexOf(tagName) !== -1) {\n                    if (tagName === 'g') {\n                        arrOfElements.push(...checkChildElements(item));\n                    }\n                    arrOfElements.push(item);\n                }\n            }\n        });\n\n    } else {\n        arrOfElements.push(element);\n    }\n\n    return arrOfElements;\n}\n\nfunction parsePoints(pts) {\n    return pts.match(floatRE).reduce(\n        (result, value, index, array) => {\n            if (index % 2 === 0) {\n                result.push(array.slice(index, index + 2));\n            }\n            return result;\n        },\n        []\n    );\n}\n\nfunction createHandler(l, t) {\n\n    const handler = createSVGElement('circle');\n\n    const items = {\n        cx: l,\n        cy: t,\n        r: '5',\n        fill: 'rgba(0, 168, 255, 0.2)',\n        stroke: '#00a8ff',\n        'vector-effect': 'non-scaling-stroke'\n    };\n\n    Object.keys(items).map(key => {\n        handler.setAttribute(key, items[key]);\n    });\n\n    return handler;\n}","import Observable from '../observer/Observer'\nimport Draggable from './html'\nimport DraggableSVG from './svg/index'\n\nimport { checkElement } from './svg/util'\nimport { arrReduce } from '../util/util'\n\n// factory method for creating draggable elements\nexport default function _drag(options) {\n    if (this.length) {\n        const Ob = new Observable();\n        return arrReduce.call(this, (result, item) => {\n            if (!(item instanceof SVGElement)) {\n                result.push(\n                    new Draggable(item, options, Ob)\n                );\n            } else {\n                if (checkElement(item)) {\n                    result.push(\n                        new DraggableSVG(item, options, Ob)\n                    );\n                }\n            }\n            return result;\n        }, []);\n    }\n}","import { Helper } from '../helper'\n\nimport {\n    requestAnimFrame,\n    cancelAnimFrame,\n    warn,\n    isDef,\n    isUndef,\n    isFunc\n} from '../util/util'\n\nimport {\n   getOffset,\n   objectsCollide\n} from '../util/css-util'\n\nexport default class Clone {\n\n    constructor(el, options) {\n\n        this.el = el;\n        this.options = options || {};\n        this.storage = null;\n\n        this._onMouseDown = this._onMouseDown.bind(this);\n        this._onTouchStart = this._onTouchStart.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n        this._onTouchMove = this._onTouchMove.bind(this);\n        this._onMouseUp = this._onMouseUp.bind(this);\n        this._onTouchEnd = this._onTouchEnd.bind(this);\n        this._animate = this._animate.bind(this);\n\n        this.enable();\n    }\n\n    enable() {\n        if (isUndef(this.storage)) {\n            this._init();\n        }  else {\n            warn('Already enabled');\n        }\n    }\n\n    disable() {\n        _destroy.call(this);\n    }\n\n    _init() {\n\n        const ctx = this;\n\n        const sel = ctx.el;\n        const _sel = Helper(sel);\n\n        const {\n            style,\n            onDrop,\n            appendTo,\n            stack\n        } = ctx.options;\n\n        const css = {\n            position: 'absolute',\n            'z-index': '2147483647'\n        };\n\n        if (isDef(style) && typeof style === 'object') {\n            Object.assign(css, style);\n        }\n\n        const dropZone = isDef(stack) \n                        ? Helper(stack)[0] \n                        : document;\n\n        const _onDrop = isFunc(onDrop)\n            ? function(evt) {\n\n                const {\n                    clone\n                } = this.storage;\n\n                const result = objectsCollide(\n                    clone,\n                    dropZone\n                );\n\n                if (result) {\n                    onDrop.call(this, evt, this.el, clone);\n                }\n            }\n            : () => {};\n\n        ctx.storage = {\n            onDrop: _onDrop,\n            options: this.options,\n            css,\n            parent: Helper(appendTo)[0] || document.body,\n            stack: dropZone\n        };\n\n        _sel.on('mousedown', this._onMouseDown)\n            .on('touchstart', this._onTouchStart);\n    }\n\n    _start(e) {\n\n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n        \n        const { \n            storage,\n            el\n        } = this;\n    \n        const {\n            parent,\n            css\n        } = storage; \n    \n        const offset = getOffset(parent);\n    \n        const { \n            clientX, \n            clientY \n        } = e; \n    \n        css.left = `${(clientX - offset.left)}px`;\n        css.top = `${(clientY - offset.top)}px`;\n    \n        const clone = el.cloneNode(true);\n        Helper(clone).css(css);\n    \n        storage.clientX = clientX;\n        storage.clientY = clientY;\n        storage.cx = clientX;\n        storage.cy = clientY;\n        storage.clone = clone;\n    \n        Helper(parent)[0].appendChild(clone);\n        this._draw();\n    }\n\n    _move(e) {\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n    \n        const { storage } = this;\n    \n        storage.clientX = e.clientX;\n        storage.clientY = e.clientY;\n        storage.doDraw = true;\n        storage.doMove = true;\n    }\n    \n    _end(e) {\n    \n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n    \n        const { \n            storage\n        } = this;\n    \n        const {\n            clone,\n            frameId,\n            onDrop\n        } = storage;\n    \n        storage.doDraw = false;\n        cancelAnimFrame(frameId);\n    \n        if (isUndef(clone)) return;\n    \n        onDrop.call(this, e);\n        clone.parentNode.removeChild(clone);\n    \n        delete storage.clone;\n    }\n    \n    _draw() {\n        this._animate();\n    }\n\n    _animate() {\n\n        const { storage } = this;\n    \n        storage.frameId = requestAnimFrame(this._animate);\n\n        const {\n            doDraw,\n            clientX,\n            clientY,\n            cx,\n            cy,\n            clone\n        } = storage;\n\n        if (!doDraw) return;\n        storage.doDraw = false;\n\n        const translate = `translate(${clientX - cx}px, ${clientY - cy}px)`;\n\n        Helper(clone).css({\n            transform: translate,\n            webkitTranform: translate,\n            mozTransform: translate,\n            msTransform: translate,\n            otransform: translate \n        });\n    }\n    \n    _destroy() {\n    \n        if (isUndef(this.storage)) return;\n        Helper(this.el)\n            .off('mousedown', this._onMouseDown)\n            .off('touchstart', this._onTouchStart);\n        delete this.storage;\n    }\n\n    _onMouseDown(e) {\n        this._start(e);\n        Helper(document)\n            .on('mousemove', this._onMouseMove)\n            .on('mouseup', this._onMouseUp);\n    }\n\n    _onMouseMove(e) {\n        this._move(e);\n    }\n\n    _onMouseUp(e) {\n        this._end(e);\n        Helper(document)\n            .off('mousemove', this._onMouseMove)\n            .off('mouseup', this._onMouseUp);\n    }\n\n    _onTouchStart(e) {\n        this._start(e.touches[0]);\n        Helper(document)\n            .on('touchmove', this._onTouchMove)\n            .on('touchend', this._onTouchEnd);\n    }\n\n    _onTouchMove(e) {\n        this._move(e.touches[0]);\n    }\n\n    _onTouchEnd(e) {\n\n        if (e.touches.length === 0) {\n            this._end(e.changedTouches[0]);\n        }\n        Helper(document)\n            .off('touchmove', this._onTouchMove)\n            .off('touchend', this._onTouchEnd);\n    }\n}","/* @license\n * Move/Rotate/Resize tool\n * Released under the MIT license, 2018-2019\n * nichollascarter@gmail.com\n*/\n\nimport '../style/subjx.css'\nimport _drag from './core/transform/index'\nimport _clone from './core/clone/index'\nimport { Helper_ } from './core/helper'\n\nclass Subjx extends Helper_ {\n\n    constructor(params) {\n        super(params);\n    }\n\n    drag(params) {\n        return _drag.call(this, params);\n    }\n    clone(params) {\n        return _clone.call(this, params);\n    }\n}\n\nexport default function(params) {\n    return new Subjx(params);\n}","import {\n    arrMap\n} from '../util/util'\n\nimport Clone from './clone'\n\nexport default function _clone(options) {\n    if (this.length) {\n        return arrMap.call(this, item => {\n            return new Clone(item, options);\n        });\n    }\n}"],"sourceRoot":""}